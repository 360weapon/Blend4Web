.. _event_model:

*****************
Событийная модель
*****************

Событийная модель предоставляет унифицированный интерфейс для описания
изменения состояний 3D сцены, упрощая обработку событий физики и действий 
пользователя.

.. index:: сенсор, sensor

Сенсоры
=======

Основным блоком событийной модели является сенсор (sensor). Сенсор является
программной сущностью, и может быть только активным (1, единица) или неактивным (0, ноль). 
Некоторые сенсоры несут полезную нагрузку (payload). Например, сенсор трассировки лучей (Ray Sensor) 
предоставляет относительную длину луча пересечения.

.. index:: сенсор; множество, sensor; manifold

Управление сенсорами не доступно пользователю в виде открытого API. Вместо этого
каждый сенсор должен присутствовать в одном или нескольких множествах (sensor
manifold). Множество является логическим контейнером, ассоциированным с объектом на сцене.
Оно определяет ответ на групповое событие сенсоров в виде вызова
функции-обработчика. Для определения множества необходимо иметь
следующую информацию (см. функцию ``b4w.controls.create_sensor_manifold()``).

* Объект-носитель множества (например, объект персонажа).
* Уникальный идентификатор множества (например, "JUMP").
* Тип вызова функции-обработчика (варианты: ``CT_CONTINUOUS`` - непрерывный, 
    ``CT_LEVEL`` - уровень, ``CT_SHOT`` - одномоментный, ``CT_TRIGGER`` - переключающий).
* Массив сенсоров.
* Логическая функция, определяющая при каких состояниях сенсоров будет
  вызываться функция-обработчик.
* Функция обработчик.
* Необязательный параметр, который может быть передан в функцию-обработчик.

Например, стоит задача определить взаимодействие некоторого бросаемого
физического объекта с окружающими предметами. Причём при ударе о различные
объекты должен выводиться характерный звук. В простом случае определяется один
сенсор соударения (Collision Sensor) для каждого объекта из окружения. Сенсоры
добавляются в множества по типу издаваемого звука. В качестве логической функции
здесь выступает логическое ИЛИ. В обработчике пишется код для воспроизведения
звука:

.. code-block:: javascript

    // array of sensors
    var metal_sens_array = [sensor_iron, sensor_copper];

    // manifold logic callback
    var metal_sens_logic = function(s) {return (s[0] || s[1])};

    // callback
    var metal_cb = function(obj, id, value, pulse) {
        // play sound here
    }
    // create manifold
    m_ctl.create_sensor_manifold(throwing_object, "METAL_COLLISION", m_ctl.CT_SHOT, 
            metal_sens_array, metal_sens_logic, metal_cb);


